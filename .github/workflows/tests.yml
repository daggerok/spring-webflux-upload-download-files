name: tests
on:
  push:
  workflow_dispatch:
    inputs:
      trigger:
        description: Type m to triggre manual jobs
        required: false
        default: ''
env:
  NODE_VERSION: 17.7.2
jobs:
  updates:
    name: updates
    if: startsWith(github.event.inputs.trigger, 'm')
      || startsWith(github.event.inputs.trigger, 'M')
    strategy:
      matrix:
        java: [11,17,18]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v1
      - uses: actions/setup-java@v2
        with:
          # 'temurin' 'zulu' 'adopt' 'adopt-hotspot' 'adopt-openj9' 'liberica' 'microsoft'
          distribution: 'temurin'
          java-version: ${{ matrix.java }}
      - uses: actions/cache@v3
        with:
          path: |
            ~/.m2
            ~/.npm
            ~/.docker
            ~/.gradle
          key: ${{ runner.os }}-build-${{ hashFiles('**/pom.xml') }}
      - run: cd $GITHUB_WORKSPACE ; ./mvnw versions:display-property-updates
  tests:
    name: unit tests java-${{ matrix.java }}
    if: github.event.inputs.trigger == ''
      || !startsWith(github.event.inputs.trigger, 'm')
      || !startsWith(github.event.inputs.trigger, 'M')
    strategy:
      matrix:
        java: [11,17,18]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v1
      - uses: actions/setup-java@v2
        with:
          distribution: 'temurin'
          java-version: ${{ matrix.java }}
      - uses: actions/cache@v3
        with:
          path: |
            ~/.m2
            ~/.npm
            ~/.docker
            ~/.gradle
          key: ${{ runner.os }}-build-${{ hashFiles('**/pom.xml') }}
      - run: cd $GITHUB_WORKSPACE ; ./mvnw
  integration-tests:
    name: integration tests java-${{ matrix.java }}
    if: github.event.inputs.trigger == ''
      || !startsWith(github.event.inputs.trigger, 'm')
      || !startsWith(github.event.inputs.trigger, 'M')
    strategy:
      matrix:
        java: [11,17,18]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v1
      - uses: actions/setup-java@v2
        with:
          distribution: 'temurin'
          java-version: ${{ matrix.java }}
      - uses: actions/cache@v3
        with:
          path: |
            ~/.m2
            ~/.npm
            ~/.docker
            ~/.gradle
          key: ${{ runner.os }}-build-${{ hashFiles('**/*gradle*', '**/pom.xml') }}
      - run: sudo apt install -y httpie
      - run: cd $GITHUB_WORKSPACE ./mvnw clean
      - run: cd $GITHUB_WORKSPACE ./mvnw compile
      - run: cd $GITHUB_WORKSPACE ./mvnw spring-boot:start
      - run: http --ignore-stdin                     get :8000/api/v1/uploads
      - run: http --ignore-stdin --form --multipart post :8080/api/v1/upload file@README.md
      - run: http --ignore-stdin                     get :8000/api/v1/uploads
      - run: http --ignore-stdin --form --multipart post :8080/api/v1/upload file@pom.xml
      - run: http --ignore-stdin -f                 post :8080/api/v1/download/README.md > $GITHUB_WORKSPACE/target/files/downloaded.README.md
      - run: http --ignore-stdin                     get :8000/api/v1/uploads
      - run: ls -lah $GITHUB_WORKSPACE/target/files/
      - run: cd $GITHUB_WORKSPACE ; ./mvnw spring-boot:stop
